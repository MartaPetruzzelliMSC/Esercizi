// <auto-generated />
using CodeFirstExample.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirstExample.Migrations
{
    [DbContext(typeof(CodeFirstDbContext))]
    [Migration("20251021124833_AddCountry")]
    partial class AddCountry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirstExample.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Italia"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Francia"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spagna"
                        });
                });

            modelBuilder.Entity("CodeFirstExample.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Monitor",
                            Price = 199.99m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tastiera",
                            Price = 49.99m,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Stampante",
                            Price = 129.50m,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mouse",
                            Price = 89.90m,
                            WarehouseId = 3
                        });
                });

            modelBuilder.Entity("CodeFirstExample.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Location = "Torino"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Location = "Genova"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Location = "Lione"
                        });
                });

            modelBuilder.Entity("CodeFirstExample.Models.Product", b =>
                {
                    b.HasOne("CodeFirstExample.Models.Warehouse", null)
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstExample.Models.Warehouse", b =>
                {
                    b.HasOne("CodeFirstExample.Models.Country", null)
                        .WithMany("Warehouses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstExample.Models.Country", b =>
                {
                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("CodeFirstExample.Models.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
